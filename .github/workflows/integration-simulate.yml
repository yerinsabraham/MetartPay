name: Integration - simulate-confirm

on:
  push:
    branches:
      - feature/simulate-integration-final
      - main
    paths:
      - 'backend/**'
      - '.github/workflows/integration-simulate.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'backend/**'
      - '.github/workflows/integration-simulate.yml'

jobs:
  run-emulator-and-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install firebase-tools
        run: |
          npm install -g firebase-tools@11

      - name: Print firebase-tools version
        run: |
          echo "firebase-tools: $(firebase --version)"

      - name: Setup Java (required by some emulators)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Validate required secrets (dev-only fallback)
        shell: bash
        run: |
          echo "WARNING: This workflow variant does NOT use repo secrets and always uses dev fallbacks.";
          echo "DEV_SIMULATE_KEY=dev-local-key" >> $GITHUB_ENV;
          echo "DEV_CLEANUP_KEY=dev-local-cleanup" >> $GITHUB_ENV;

      - name: Patch backend package.json engines for emulator
        working-directory: .
        run: |
          echo "Patching backend/package.json engines.node -> 18 for Functions emulator";
          node -e "const fs=require('fs');const p='backend/package.json';if(!fs.existsSync(p)){console.error('backend/package.json not found');process.exit(0);}const j=JSON.parse(fs.readFileSync(p));j.engines=j.engines||{};j.engines.node='18';fs.writeFileSync(p,JSON.stringify(j,null,2));console.log('patched');"

      - name: Install backend deps
        working-directory: backend
        run: |
          npm ci

      - name: Build backend
        working-directory: backend
        run: |
          echo "Building backend (TypeScript -> dist)";
          npm run build

      - name: Show built backend files (debug)
        run: |
          echo "Listing backend/dist";
          ls -la backend/dist || true;
          echo "--- head of backend/dist/index.js ---";
          if [ -f backend/dist/index.js ]; then head -n 120 backend/dist/index.js || true; else echo "backend/dist/index.js not found"; fi

      - name: Show patched backend/package.json (debug)
        run: |
          echo "--- backend/package.json after CI patch ---";
          cat backend/package.json || true;

      - name: Smoke load built backend (detect runtime parse errors)
        working-directory: .
        run: |
          echo "Node version: $(node -v)";
          echo "Attempting to require the built backend to catch runtime errors";
          node -e "try{ require('./backend/dist/index.js'); console.log('backend/dist/index.js loaded OK'); } catch(e){ console.error('ERROR loading backend/dist/index.js:', e && e.stack || e); process.exit(2); }"

      - name: Dump firebase-functions build metadata (debug)
        working-directory: .
        run: |
          echo "--- Looking for firebase-functions binary ---";
          if [ -f backend/node_modules/.bin/firebase-functions ]; then
            echo "Found backend/node_modules/.bin/firebase-functions - printing first 200 lines and running with --help";
            echo "--- file head ---";
            sed -n '1,200p' backend/node_modules/.bin/firebase-functions || true;
            echo "--- run --help ---";
            backend/node_modules/.bin/firebase-functions --help || true;
            echo "--- run without args (capture stdout/stderr) ---";
            backend/node_modules/.bin/firebase-functions || true;
          else
            echo "No firebase-functions binary at backend/node_modules/.bin/firebase-functions";
          fi

          echo "--- Searching for functions*.yaml files in repo ---";
          find . -maxdepth 4 -type f -iname 'functions*.yaml' -print -exec sh -c 'echo "---- {} ----"; sed -n "1,200p" "{}" || true' \; || true

      - name: Run integration simulate test under emulators (debug)
        working-directory: backend
        env:
          FIRESTORE_EMULATOR_HOST: 127.0.0.1:8080
          NODE_ENV: development
        run: |
          echo "Using DEV_SIMULATE_KEY=$(printenv DEV_SIMULATE_KEY)";
          echo "Node version: $(node -v)";
          firebase emulators:exec --project=metartpay-bac2f --debug "node tools/integration_simulate_test.js"