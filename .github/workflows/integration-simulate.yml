name: Integration - simulate-confirm

on:
  push:
    branches:
      - feature/simulate-integration-final
      - main
    paths:
      - 'backend/**'
      - '.github/workflows/integration-simulate.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'backend/**'
      - '.github/workflows/integration-simulate.yml'

jobs:
  run-emulator-and-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install firebase-tools
        run: |
          npm install -g firebase-tools@11

      - name: Print firebase-tools version
        run: |
          echo "firebase-tools: $(firebase --version)"

      - name: Setup Java (required by some emulators)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Validate required secrets (fallback allowed)
        shell: bash
        env:
          DEV_SIMULATE_KEY: ${{ secrets.DEV_SIMULATE_KEY }}
          DEV_CLEANUP_KEY: ${{ secrets.DEV_CLEANUP_KEY }}
        run: |
          # If secrets are present, expose them to subsequent steps via GITHUB_ENV.
          # If not, write safe fallback test values so CI (including forks) can run emulators.
          if [ -n "$DEV_SIMULATE_KEY" ] && [ -n "$DEV_CLEANUP_KEY" ]; then
            echo "Using provided secrets for DEV_SIMULATE_KEY and DEV_CLEANUP_KEY";
            echo "DEV_SIMULATE_KEY=$DEV_SIMULATE_KEY" >> $GITHUB_ENV;
            echo "DEV_CLEANUP_KEY=$DEV_CLEANUP_KEY" >> $GITHUB_ENV;
          else
            echo "WARNING: DEV_SIMULATE_KEY or DEV_CLEANUP_KEY not set. Writing fallback test keys to GITHUB_ENV.";
            echo "DEV_SIMULATE_KEY=dev-local-key" >> $GITHUB_ENV;
            echo "DEV_CLEANUP_KEY=dev-local-cleanup" >> $GITHUB_ENV;
          fi

      - name: Patch backend package.json engines for emulator
        working-directory: .
        run: |
          echo "Patching backend/package.json engines.node -> 18 for Functions emulator";
          node -e "const fs=require('fs');const p='backend/package.json';if(!fs.existsSync(p)){console.error('backend/package.json not found');process.exit(0);}const j=JSON.parse(fs.readFileSync(p));j.engines=j.engines||{};j.engines.node='18';fs.writeFileSync(p,JSON.stringify(j,null,2));console.log('patched');"

      - name: Install backend deps
        working-directory: backend
        run: |
          npm ci

      - name: Build backend
        working-directory: backend
        run: |
          echo "Building backend (TypeScript -> dist)";
          npm run build

      - name: Run integration simulate test under emulators
        working-directory: backend
        env:
          FIRESTORE_EMULATOR_HOST: 127.0.0.1:8080
          NODE_ENV: development
        run: |
          # Use emulators:exec to start emulators, run the test script, and shut down cleanly
          # DEV_SIMULATE_KEY / DEV_CLEANUP_KEY are provided via $GITHUB_ENV (either real secrets or CI fallbacks)
          echo "Using DEV_SIMULATE_KEY=$(printenv DEV_SIMULATE_KEY)";
          firebase emulators:exec --project=metartpay-bac2f "node tools/integration_simulate_test.js"
